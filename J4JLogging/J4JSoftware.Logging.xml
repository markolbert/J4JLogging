<?xml version="1.0"?>
<doc>
    <assembly>
        <name>J4JSoftware.Logging</name>
    </assembly>
    <members>
        <member name="T:J4JSoftware.Logging.IJ4JLogger`1">
            <summary>
                Wrapper for <see cref="T:Serilog.ILogger"/> which simplifies including calling member
                (e.g., method name) and source code information.
            </summary>
            <typeparam name="TCalling">the Type being logged</typeparam>
        </member>
        <member name="P:J4JSoftware.Logging.IJ4JLogger`1.IncludeAssembly">
            <summary>
                Flag indicating whether or not the Assembly name should be included
                in references to the Type being logged. Read only.
            </summary>
        </member>
        <member name="P:J4JSoftware.Logging.IJ4JLogger`1.SourceRootPath">
            <summary>
            The root part of the source code paths (optional). If specified,
            the root part will be stripped from all source code paths. Read only.
            </summary>
        </member>
        <member name="P:J4JSoftware.Logging.IJ4JLogger`1.IncludeSourceDefault">
            <summary>
                Flag indicating whether or not source code information (i.e., file name and
                line number) should be included in logging events. Read only.
            </summary>
        </member>
        <member name="M:J4JSoftware.Logging.IJ4JLogger`1.IncludeSource">
            <summary>
                Forces the next event to be written to include source code information regardless
                of the value of IncludeSourceDefault
            </summary>
            <returns>
                a reference to the wrapper object, so that event-writing
                methods can be chained onto the method call
            </returns>
        </member>
        <member name="M:J4JSoftware.Logging.IJ4JLogger`1.Write(Serilog.Events.LogEventLevel,System.String,System.String,System.String,System.Int32)">
            <summary>
            Writes an event to ILogger, including the calling member and calling type, and
            optionally the source code file and line number of the method.
            </summary>
            <param name="level">the <see cref="T:Serilog.Events.LogEventLevel"/> of the event</param>
            <param name="template">the <see cref="N:Serilog"/> message template for constructing the
            log message. Note that this will be included within the output template as the
            value of the Message parameter.</param>
            <param name="memberName">the name of the method calling the Write method (supplied
            automatically by the compiler)</param>
            <param name="srcPath">the path to the source code file in which the method calling the
            Write method is defined (supplied automatically by the compiler)</param>
            <param name="srcLine">the line number within the source code file at which the method calling the
            Write method is defined (supplied automatically by the compiler)</param>
        </member>
        <member name="M:J4JSoftware.Logging.IJ4JLogger`1.Write``1(Serilog.Events.LogEventLevel,System.String,``0,System.String,System.String,System.Int32)">
             <summary>
             Writes an event to ILogger, including the calling member and calling type, and
             optionally the source code file and line number of the method.
            
             This overload
             lets you pass a parameter in to the <see cref="N:Serilog"/> logging system to
             be incorporated into the supplied message template./>
             </summary>
             <typeparam name="T0">the Type of the supplied propertyValue</typeparam>
             <param name="level">the <see cref="T:Serilog.Events.LogEventLevel"/> of the event</param>
             <param name="template">the <see cref="T:Serilog.Events.MessageTemplate"/> message template for constructing the
             log message. Note that this will be included within the output template as the
             value of the Message parameter.</param>
             <param name="propertyValue">the parameter value to be incorporated into the
             supplied message template (see the <see cref="N:Serilog"/> documentation for how
             the value is matched to the token in the message template)</param>
             <param name="memberName">the name of the method calling the Write method (supplied
             automatically by the compiler)</param>
             <param name="srcPath">the path to the source code file in which the method calling the
             Write method is defined (supplied automatically by the compiler)</param>
             <param name="srcLine">the line number within the source code file at which the method calling the
             Write method is defined (supplied automatically by the compiler)</param>
        </member>
        <member name="M:J4JSoftware.Logging.IJ4JLogger`1.Write``2(Serilog.Events.LogEventLevel,System.String,``0,``1,System.String,System.String,System.Int32)">
             <summary>
             Writes an event to ILogger, including the calling member and calling type, and
             optionally the source code file and line number of the method.
            
             This overload
             lets you pass two parameters in to the <see cref="N:Serilog"/> logging system to
             be incorporated into the supplied message template./>
             </summary>
             <typeparam name="T0">the Type of the first supplied propertyValue</typeparam>
             <typeparam name="T1">the Type of the second supplied propertyValue</typeparam>
             <param name="level">the <see cref="T:Serilog.Events.LogEventLevel"/> of the event</param>
             <param name="template">the <see cref="T:Serilog.Events.MessageTemplate"/> message template for constructing the
             log message. Note that this will be included within the output template as the
             value of the Message parameter.</param>
             <param name="propertyValue0">the first parameter value to be incorporated into the
             supplied message template (see the <see cref="N:Serilog"/> documentation for how
             the value is matched to the token in the message template)</param>
             <param name="propertyValue1">the second parameter value to be incorporated into the
             supplied message template (see the <see cref="N:Serilog"/> documentation for how
             the value is matched to the token in the message template)</param>
             <param name="memberName">the name of the method calling the Write method (supplied
             automatically by the compiler)</param>
             <param name="srcPath">the path to the source code file in which the method calling the
             Write method is defined (supplied automatically by the compiler)</param>
             <param name="srcLine">the line number within the source code file at which the method calling the
             Write method is defined (supplied automatically by the compiler)</param>
        </member>
        <member name="T:J4JSoftware.Logging.J4JLogger`1">
            <summary>
                Wrapper for <see cref="T:Serilog.ILogger"/> which simplifies including calling member
                (e.g., method name) and source code information.
            </summary>
            <typeparam name="TCalling">the Type being logged</typeparam>
        </member>
        <member name="M:J4JSoftware.Logging.J4JLogger`1.#ctor(Serilog.ILogger,J4JSoftware.Logging.IJ4JLoggerConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="logger">an instance of <see cref="T:Serilog.ILogger"/> that handles the actual
            logging</param>
            <param name="config">an instance of <see cref="T:J4JSoftware.Logging.IJ4JLoggerConfiguration"/> that defines
            various configuration parameters</param>
        </member>
        <member name="P:J4JSoftware.Logging.J4JLogger`1.SourceRootPath">
            <summary>
            The root part of the source code paths (optional). If specified,
            the root part will be stripped from all source code paths. Read only.
            </summary>
        </member>
        <member name="P:J4JSoftware.Logging.J4JLogger`1.IncludeAssembly">
            <summary>
                Flag indicating whether or not the Assembly name should be included
                in references to the Type being logged. Read only.
            </summary>
        </member>
        <member name="P:J4JSoftware.Logging.J4JLogger`1.IncludeSourceDefault">
            <summary>
                Flag indicating whether or not source code information (i.e., file name and
                line number) should be included in logging events. Read only.
            </summary>
        </member>
        <member name="M:J4JSoftware.Logging.J4JLogger`1.IncludeSource">
            <summary>
                Forces the next event to be written to include source code information regardless
                of the value of IncludeSourceDefault
            </summary>
            <returns>
                a reference to the wrapper object, so that event-writing
                methods can be chained onto the method call
            </returns>
        </member>
        <member name="P:J4JSoftware.Logging.J4JLogger`1.BaseLogger">
            <summary>
            The <see cref="T:Serilog.ILogger"/>  instance that handles the actual logging. Read only.
            </summary>
        </member>
        <member name="M:J4JSoftware.Logging.J4JLogger`1.InjectSourceContext">
            <summary>
            Configures the <see cref="T:Serilog.Context.LogContext"/> object used by <see cref="N:Serilog"/> to pass
            additional information to the logging system. Can be overridden in derived classes
            to add additional data.
            </summary>
        </member>
        <member name="M:J4JSoftware.Logging.J4JLogger`1.AdjustMessageTemplate(System.String)">
            <summary>
            Adjusts the <see cref="T:Serilog.Events.MessageTemplate"/> to include the placeholders used to
            emit caller and source code information. Can be overridden in derived classes to
            emit additional properties.
            </summary>
            <param name="rawTemplate">the raw message template</param>
            <returns>a revised message template with fields to display caller information
            and, if needed, source code information</returns>
        </member>
        <member name="M:J4JSoftware.Logging.J4JLogger`1.Write(Serilog.Events.LogEventLevel,System.String,System.String,System.String,System.Int32)">
            <summary>
            Writes an event to ILogger, including the calling member and calling type, and
            optionally the source code file and line number of the method.
            </summary>
            <param name="level">the <see cref="T:Serilog.Events.LogEventLevel"/> of the event</param>
            <param name="template">the <see cref="N:Serilog"/> message template for constructing the
            log message. Note that this will be included within the output template as the
            value of the Message parameter.</param>
            <param name="memberName">the name of the method calling the Write method (supplied
            automatically by the compiler)</param>
            <param name="srcPath">the path to the source code file in which the method calling the
            Write method is defined (supplied automatically by the compiler)</param>
            <param name="srcLine">the line number within the source code file at which the method calling the
            Write method is defined (supplied automatically by the compiler)</param>
        </member>
        <member name="M:J4JSoftware.Logging.J4JLogger`1.Write``1(Serilog.Events.LogEventLevel,System.String,``0,System.String,System.String,System.Int32)">
             <summary>
             Writes an event to ILogger, including the calling member and calling type, and
             optionally the source code file and line number of the method.
            
             This overload
             lets you pass a parameter in to the <see cref="N:Serilog"/> logging system to
             be incorporated into the supplied message template./>
             </summary>
             <typeparam name="T0">the Type of the supplied propertyValue</typeparam>
             <param name="level">the <see cref="T:Serilog.Events.LogEventLevel"/> of the event</param>
             <param name="template">the <see cref="T:Serilog.Events.MessageTemplate"/> message template for constructing the
             log message. Note that this will be included within the output template as the
             value of the Message parameter.</param>
             <param name="propertyValue">the parameter value to be incorporated into the
             supplied message template (see the <see cref="N:Serilog"/> documentation for how
             the value is matched to the token in the message template)</param>
             <param name="memberName">the name of the method calling the Write method (supplied
             automatically by the compiler)</param>
             <param name="srcPath">the path to the source code file in which the method calling the
             Write method is defined (supplied automatically by the compiler)</param>
             <param name="srcLine">the line number within the source code file at which the method calling the
             Write method is defined (supplied automatically by the compiler)</param>
        </member>
        <member name="M:J4JSoftware.Logging.J4JLogger`1.Write``2(Serilog.Events.LogEventLevel,System.String,``0,``1,System.String,System.String,System.Int32)">
             <summary>
             Writes an event to ILogger, including the calling member and calling type, and
             optionally the source code file and line number of the method.
            
             This overload
             lets you pass two parameters in to the <see cref="N:Serilog"/> logging system to
             be incorporated into the supplied message template./>
             </summary>
             <typeparam name="T0">the Type of the first supplied propertyValue</typeparam>
             <typeparam name="T1">the Type of the second supplied propertyValue</typeparam>
             <param name="level">the <see cref="T:Serilog.Events.LogEventLevel"/> of the event</param>
             <param name="template">the <see cref="T:Serilog.Events.MessageTemplate"/> message template for constructing the
             log message. Note that this will be included within the output template as the
             value of the Message parameter.</param>
             <param name="propertyValue0">the first parameter value to be incorporated into the
             supplied message template (see the <see cref="N:Serilog"/> documentation for how
             the value is matched to the token in the message template)</param>
             <param name="propertyValue1">the second parameter value to be incorporated into the
             supplied message template (see the <see cref="N:Serilog"/> documentation for how
             the value is matched to the token in the message template)</param>
             <param name="memberName">the name of the method calling the Write method (supplied
             automatically by the compiler)</param>
             <param name="srcPath">the path to the source code file in which the method calling the
             Write method is defined (supplied automatically by the compiler)</param>
             <param name="srcLine">the line number within the source code file at which the method calling the
             Write method is defined (supplied automatically by the compiler)</param>
        </member>
        <member name="M:J4JSoftware.Logging.J4JLoggingExtensions.DefineLocalAppDataLogPath(System.String,System.String)">
            TODO: doesn't get useful folder name if not explicitly specified
        </member>
    </members>
</doc>
